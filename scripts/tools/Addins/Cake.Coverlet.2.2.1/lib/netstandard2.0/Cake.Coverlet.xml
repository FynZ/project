<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.Coverlet</name>
    </assembly>
    <members>
        <member name="T:Cake.Coverlet.CoverletAliases">
            <summary>
            Several extension methods when using DotNetCoreTest.
            </summary>
        </member>
        <member name="M:Cake.Coverlet.CoverletAliases.DotNetCoreTest(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Common.Tools.DotNetCore.Test.DotNetCoreTestSettings,Cake.Coverlet.CoverletSettings)">
            <summary>
            Runs DotNetCoreTest using the given <see cref="T:Cake.Coverlet.CoverletSettings"/>
            </summary>
            <param name="context"></param>
            <param name="project"></param>
            <param name="settings"></param>
            <param name="coverletSettings"></param>
        </member>
        <member name="M:Cake.Coverlet.CoverletAliases.Coverlet(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Core.IO.FilePath,Cake.Coverlet.CoverletSettings)">
            <summary>
            Runs coverlet with the given dll, test project and settings
            </summary>
            <param name="context"></param>
            <param name="testFile">The dll to instrument</param>
            <param name="testProject">The test project to run</param>
            <param name="settings">The coverlet settings to apply</param>
        </member>
        <member name="M:Cake.Coverlet.CoverletAliases.Coverlet(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Coverlet.CoverletSettings)">
            <summary>
            Runs the coverlet global tool with the given test project. The name of the 
            dll is inferred from the project name
            </summary>
            <param name="context"></param>
            <param name="testProject">The test project to run</param>
            <param name="settings">The coverlet settings to apply</param>
        </member>
        <member name="M:Cake.Coverlet.CoverletAliases.Coverlet(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,Cake.Coverlet.CoverletSettings)">
            <summary>
            Runs the coverlet global tool with the given folder. We will discover any proj files, 
            take the first and infer the name of the dll from that.
            </summary>
            <param name="context"></param>
            <param name="testProjectDir">The directory to find the dll and project from</param>
            <param name="settings">The coverlet settings to apply</param>
        </member>
        <member name="T:Cake.Coverlet.CoverletOutputFormat">
            <summary>
            Maps to the output formats provided by Coverlet
            </summary>
        </member>
        <member name="F:Cake.Coverlet.CoverletOutputFormat.json">
            <summary>
            Json
            </summary>
        </member>
        <member name="F:Cake.Coverlet.CoverletOutputFormat.lcov">
            <summary>
            Lcov
            </summary>
        </member>
        <member name="F:Cake.Coverlet.CoverletOutputFormat.opencover">
            <summary>
            Opencover
            </summary>
        </member>
        <member name="F:Cake.Coverlet.CoverletOutputFormat.cobertura">
            <summary>
            Cobertura
            </summary>
        </member>
        <member name="F:Cake.Coverlet.CoverletOutputFormat.teamcity">
            <summary>
            TeamCity
            </summary>
        </member>
        <member name="T:Cake.Coverlet.OutputTransformer">
            <summary>
            A delegate representing the output transformation
            </summary>
            <param name="fileName">The file name</param>
            <param name="directoryPath">The directory path</param>
            <returns>The path and name of the file (without extension)</returns>
        </member>
        <member name="T:Cake.Coverlet.CoverletSettings">
            <summary>
            Settings used by Cake.Coverlet
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.CollectCoverage">
            <summary>
            Gets or sets if coverage should be collected
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.CoverletOutputFormat">
            <summary>
            Gets or sets the output format for Coverlet
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.Threshold">
            <summary>
            Gets or sets the threshold for Coverlet to use in percent
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.ThresholdType">
            <summary>
            Gets or sets the type of threshold to apply.
            </summary>
            <remarks>
            This has no effect if Threshold is not set to a value
            </remarks>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.CoverletOutputDirectory">
            <summary>
            Gets or sets the output directory the output files
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.CoverletOutputName">
            <summary>
            Gets or sets the name of the output file excluding format
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.ExcludeByFile">
            <summary>
            Gets or sets the list of files to exclude
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.ExcludeByAttribute">
            <summary>
            Gets or sets the list of files to exclude
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.Exclude">
            <summary>
            Gets or sets the exclusion filters
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.Include">
            <summary>
            Gets or sets a inclusion filters
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.MergeWithFile">
            <summary>
            Gets or sets the file to merge the results of the run with
            </summary>
        </member>
        <member name="P:Cake.Coverlet.CoverletSettings.OutputTransformer">
            <summary>
            Gets or sets a transformation function taking the <see cref="P:Cake.Coverlet.CoverletSettings.CoverletOutputName"/> and
            returning the new file name without an extension
            </summary>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithFilter(System.String)">
            <summary>
            Adds a filter to the list of exclusions
            </summary>
            <param name="filter">The filter to add</param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithFileExclusion(System.String)">
            <summary>
            Adds a file to the list of files to exclude
            </summary>
            <param name="file">The file to exclude</param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithAttributeExclusion(System.String)">
            <summary>
            Adds a attribute to the list of attribute to exclude
            </summary>
            <param name="attribute">The attribute to exclude</param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithInclusion(System.String)">
            <summary>
            Adds a filter to the list of inclusions
            </summary>
            <param name="file">The filter to add</param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithThresholdType(Cake.Coverlet.ThresholdType)">
            <summary>
            Add a type of threshold to combine with the existing
            </summary>
            <param name="type">The type of threshold to add</param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithFormat(Cake.Coverlet.CoverletOutputFormat)">
            <summary>
            Add a type of format to combine with the existing output formats
            </summary>
            <param name="format">The format type to add</param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.WithDateTimeTransformer">
            <summary>
            Add a default transformer appending the current date time at the time of calling test
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.SetFormat(Cake.Coverlet.CoverletOutputFormat)">
            <summary>
            Sets the output format to be a specific value
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletSettings.Clone">
            <summary>
            Clones the coverlet settings to a new instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cake.Coverlet.CoverletTool">
            <summary>
            A class for the coverlet tool
            </summary>
        </member>
        <member name="M:Cake.Coverlet.CoverletTool.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Common.Tools.DotNetCore.VSTest.DotNetCoreVSTester" /> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tool locator.</param>
        </member>
        <member name="M:Cake.Coverlet.CoverletTool.GetToolName">
            <summary>
            Gets the name of the tool.
            </summary>
            <returns>The name of the tool</returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletTool.Run(Cake.Core.IO.FilePath,Cake.Core.IO.FilePath,Cake.Coverlet.CoverletSettings)">
            <summary>
            Runs the tool with the given test file, test project and settings
            </summary>
            <param name="testFile"></param>
            <param name="testProject"></param>
            <param name="settings"></param>
        </member>
        <member name="M:Cake.Coverlet.CoverletTool.GetToolExecutableNames">
            <summary>
            Gets the possible executable names
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cake.Coverlet.CoverletTool.GetAlternativeToolPaths(Cake.Coverlet.CoverletSettings)">
            <summary>
            Gets the alternative tool paths for the tool
            </summary>
            <param name="settings"></param>
            <returns>The alternate tool paths</returns>
        </member>
        <member name="T:Cake.Coverlet.ThresholdType">
            <summary>
            The type of threshold to apply the limit to
            </summary>
        </member>
        <member name="F:Cake.Coverlet.ThresholdType.NotSet">
            <summary>
            Not Set
            </summary>
        </member>
        <member name="F:Cake.Coverlet.ThresholdType.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:Cake.Coverlet.ThresholdType.Branch">
            <summary>
            Branch
            </summary>
        </member>
        <member name="F:Cake.Coverlet.ThresholdType.Method">
            <summary>
            Method
            </summary>
        </member>
    </members>
</doc>
